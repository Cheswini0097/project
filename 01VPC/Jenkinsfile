pipeline {
    agent {
        label 'AGENT-1'

    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansicolour('xterm')
    }
    environment {
        DEBUG = 'true'
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select the option')

    }
    stages {
        stage ('Init' and 'Plan')
        steps   {
            withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                sh """
                cd 01VPC
                terraform init -reconfigure
                terraform plan -out=tfplan
                """
            }
        }
    }
    stage('Apply or Destroy') {
        input {
            message "should we continue to ${params.ACTION}"
            ok "Yes, we should."
        }
        steps {
            withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                sh """
                
                    cd 01VPC
                    if [ ${params.ACTION}  == 'apply]
                    then
                        terraform apply -auto-approve tfplan
                    elif [ ${params.ACTION} == 'destroy' ]
                    then
                        terraform destroy -auto-approve
                fi
                """

            }

        }
    }
    stage ('Trigger Sg') {
        when {
            expression { params.ACTION == 'apply' }

        }
        steps{
            build job: '02sg', parameters: [string(name: 'ACTION', value: "apply")], wait: false
        }
    }

}
post {
    always{
        echo "this section runs always"
        deleteDir()

    }
    success {
        echo "This section runs when pipeline sucess"

    }
    failure {
        echo "This Section runs when pipeline failure"
    }
}