pipeline {
    agent{
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansicolour('xterm')
    }
    environment{
        DEBUG = 'true'

    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')
    }
    stages{
        stage('Init and Plan') {
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds')
                sh """
                cd 02Sg
                terraform init -reconfigure
                terraform plan -out=tfplan
                """
            }
        }

    }
    stage('Apply or Destroy') {
        input {
            message "Should we continue to ${params.ACTION}"
            ok "Yes, We should."
        }
        steps {
            withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                sh """
                    cd 02Sg
                    if [ ${params.ACTION} == 'apply']
                    then
                        terraform apply -auto-approve tfplan
                    elif [ ${param.ACTION}== 'destroy]
                    then
                        terraform destroy -auto-approve
                    fi
                    """

            }

        }
    }
    stage ('Destroy VPC') {
        when {
            expression {param.ACTION == 'destroy'}

        }
        steps{
            build job: '01VPC', parameters: [string(name: 'ACTION', value: 'destroy')], wait: false

        }
    }
    stage('Parallel') {
        when {
            expression {param.ACTION == 'apply'}
        }
        parallel {
            stage('bastion') {
                steps {
                    build job: '03-bastion', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                }
            }
            stage('RDS') {
                steps {
                build job: '04RDS', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                }
            }
            stage('EKS') {
                steps {
                    build job: '05eks', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                }
            }
            
            
            stage('ECR') {
                steps {
                    build jobs: '08ecr', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                }
                
            }
            

        }

    }
    stages('Sequential') {
        when{
            expression { params.ACTION == 'apply' }

        }
        stage('ACM') {
                steps {
                    build jobs: '06ACM', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                }
            }
            stage('ALB') {
                steps {
                    build jobs: '07ALB', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                }
            }
            stage('CDN') {
                steps {
                    build jobs: '09Cdn', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                }
            }    
    }

    
}
post{
    always {
        echo "This section runs always"
        deleteDir()

    }
    sucess{
        echo "This section runs when pipeline sucess"
    }
    failure {
        echo "THis section runs when pipeline failure"
    }
}